R.<k> = ZZ['k']
p1 = k**6 + 7*k**4 - 40*k**3 + 12*k**2 - 114*k + 31377
p2 = k**5 - 8*k**4 + 19*k**3 - 313*k**2 - 14*k + 14011
n = 10454218591498795601290662772200307911998562669863385355802627031876074980914345876407572312328064803739896953235044134017037265457513988384695520477185580005616518895806383461791298439900882124322567070855237111
enc =  8302893688508069407486501427022032266710613718076134558346488994835611399363117550795802665516225109775856758840969320483857185267171776336044690340396506593375193653001988109181334094215948304620493996980769154
e = 31337

p = p1*p2 - n
sols = p.roots()
sols.sort()
k = sols[0][0]
p = p1(k)
q = p2(k)
phi = (p - 1) * (q - 1)
d = inverse_mod(e, phi)
msg = pow(enc, d, n)

from Crypto.Util.number import long_to_bytes
msg = long_to_bytes(msg)
print(msg)
